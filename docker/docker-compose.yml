services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - ../.env            # <- läs in .env från repo-roten
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: betting
      POSTGRES_PASSWORD: betting
      POSTGRES_DB: betting_core
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ../db/ddl/V1__core_schema.sql:/docker-entrypoint-initdb.d/01_core_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer:4
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli","PING"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  db_data:
